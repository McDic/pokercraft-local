import typing
from enum import Enum

from .constants import POKERCRAFT_AHREF


class Language(Enum):
    ENGLISH = "en"
    KOREAN = "ko"


TITLE_FRAME: typing.Final[str] = "%s's realistic tournament performance on GGNetwork"
SOFTWARE_CREDITS_FRAME: typing.Final[str] = "Generated by %s provided by McDic"
RR_PLOT_TITLE: typing.Final[str] = "Relative Prize Returns (RR) by Buy In Amount"
BANKROLL_PLOT_TITLE: typing.Final[str] = (
    "Bankroll Analysis with Monte-Carlo Simulation "
    "based on RR (Only if your performance is winning)"
)

# fmt: off
PRIZE_PIE_CHART_TITLE: typing.Final[
    str
] = "Your Prizes (Small prizes are grouped as 'Others')"
# fmt: on

TRANSLATION: typing.Final[dict[Language, dict[str, str]]] = {
    Language.KOREAN: {
        # Title and credits
        TITLE_FRAME: "%s님의 GGNetwork 토너먼트에서의 현실적인 성적",
        SOFTWARE_CREDITS_FRAME: "McDic이 만든 %s에 의해 생성됨",
        # GUI
        "Select Language": "언어 선택",
        "Data Directory: %s": "선택된 데이터 폴더: %s",
        "Choose Data Directory": "데이터 폴더 선택",
        "Output Directory: %s": "분석파일 내보낼 폴더: %s",
        "Choose Output Directory": "분석파일 내보낼 폴더 선택",
        "Your GG nickname": "당신의 GG 닉네임",
        # Historical Performance
        "Historical Performance": "과거 성적",
        "Tournament Count": "토너먼트 참가 횟수",
        "Net Profit & Rake": "순수익 & 레이크",
        "Profitable Ratio": "수익 보는 비율",
        "Average Buy In": "평균 바이인 금액",
        "Profits & Rakes": "수익 & 레이크",
        "Net Profit": "순수익 (레이크 고려)",
        "Net Rake": "지불한 레이크",
        "Ideal Profit w.o. Rake": "레이크 없을 때 이상적인 수익",
        "Since 0": "전체 기준",
        "Recent %d": "최근 %d개 토너 기준",
        "Break-even": "멘징 지점",
        "Micro / Low": "마이크로 / 로우",
        "Low / Mid": "로우 / 미들",
        "Mid / High": "미들 / 하이롤러",
        # Relative Prize Returns
        RR_PLOT_TITLE: "바인 금액 대비 상대적 리턴 (RR = 상금 / 바이인 / (1 + 리엔트리))",
        "By Buy In Amount": "바인 금액별 분포",
        "By Total Entries": "엔트리수별 분포",
        "Nonzero prize only": "상금이 있는 토너만 포함됨",
        "Marginal RR Distribution": "누적 RR 분포",
        "Relative Prize Return (RR)": "바인 금액 대비 상대적 리턴 (RR)",
        "RR by Buy In": "바인 금액별 RR",
        "RR by Entries": "엔트리수별 RR",
        "Got %sx profit in this region": "이 구간에서 %s배 수익을 냄",
        "Buy In": "바인금액",
        "Total Entries": "총 엔트리 수",
        "Marginal RR": "누적 RR",
        "Break-even: 1x Profit": "멘징 지점: 1배 수익",
        "Good run: 4x Profit": "좋은 성적: 4배 수익",
        "Deep run: 32x Profit": "딥런: 32배 수익",
        # Bankroll Analysis
        BANKROLL_PLOT_TITLE: "RR 기반 몬테카를로 시뮬레이션을 통한 뱅크롤 분석 (당신이 위닝러인 경우에만)",
        "Metric": "메트릭",
        "Initial Capital": "초기 자본",
        "Bankruptcy Rate": "파산 확률",
        "Survival Rate": "생존 확률",
        "%.1f Buy-ins": "%.1f 바이인",
        # Prize Pie Chart
        PRIZE_PIE_CHART_TITLE: "당신의 상금 분포 (작은 상금은 '기타'로 분류됨)",
        "Others": "기타",
    },
}


def translate_to(lang: Language, text: str) -> str:
    """
    Translate given text to target language.
    """
    if lang is Language.ENGLISH:
        return text
    else:
        return TRANSLATION[lang].get(text, text)


def get_html_title(nickname: str, lang: Language) -> str:
    """
    Get HTML title in the given language.
    """
    return translate_to(lang, TITLE_FRAME) % (nickname,)


def get_software_credits(lang: Language) -> str:
    """
    Get software credits in the given language.
    """
    return translate_to(lang, SOFTWARE_CREDITS_FRAME) % (POKERCRAFT_AHREF,)


def get_translated_column_moving_average(lang: Language, window_size: int) -> str:
    """
    Get translated column name for moving average.
    """
    if window_size == 0:
        return translate_to(lang, "Since 0")
    else:
        return translate_to(lang, "Recent %d") % (window_size,)
