import typing
from enum import Enum

from .constants import POKERCRAFT_AHREF


class Language(Enum):
    ENGLISH = "en"
    KOREAN = "ko"


TITLE_FRAME: typing.Final[str] = "%s's realistic tournament performance on GGNetwork"
SOFTWARE_CREDITS_FRAME: typing.Final[str] = "Generated by %s provided by McDic"


TRANSLATION: typing.Final[dict[Language, dict[str, str]]] = {
    Language.KOREAN: {
        # Title and credits
        TITLE_FRAME: "%s님의 GGNetwork 토너먼트에서의 현실적인 성적",
        SOFTWARE_CREDITS_FRAME: "McDic이 만든 %s에 의해 생성됨",
        # Historical Performance
        "Historical Performance": "과거 성적",
        "Tournament Count": "토너먼트 참가 횟수",
        "Net Profit & Rake": "순수익 & 레이크",
        "Profitable Ratio": "수익 보는 비율",
        "Average Buy In": "평균 바이인 금액",
        "Profits & Rakes": "수익 & 레이크",
        "Net Profit": "순수익 (레이크 고려)",
        "Net Rake": "지불한 레이크",
        "Ideal Profit w.o. Rake": "레이크 없을 때 이상적인 수익",
        "Since 0": "전체 기준",
        "Recent %d": "최근 %d개 토너 기준",
        "Break-even": "멘징 지점",
        "Micro / Low": "마이크로 / 로우",
        "Low / Mid": "로우 / 미들",
        "Mid / High": "미들 / 하이롤러",
    },
}


def translate_to(lang: Language, text: str) -> str:
    """
    Translate given text to target language.
    """
    if lang is Language.ENGLISH:
        return text
    else:
        return TRANSLATION[lang].get(text, text)


def get_html_title(nickname: str, lang: Language) -> str:
    """
    Get HTML title in the given language.
    """
    return translate_to(lang, TITLE_FRAME) % (nickname,)


def get_software_credits(lang: Language) -> str:
    """
    Get software credits in the given language.
    """
    return translate_to(lang, SOFTWARE_CREDITS_FRAME) % (POKERCRAFT_AHREF,)


def get_translated_column_moving_average(lang: Language, window_size: int) -> str:
    """
    Get translated column name for moving average.
    """
    if window_size == 0:
        return translate_to(lang, "Since 0")
    else:
        return translate_to(lang, "Recent %d") % (window_size,)
